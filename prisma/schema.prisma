generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Address {
  zipcode        String
  state          String
  city           String
  district       String
  address        String
  number         Int
  complement     String?
}

model User {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  name                  String        
  image                 String?         
  email                 String                  @unique
  phone                 String                  @unique
  documentNumber        String                  @unique
  zipcode               String        
  password              String        
  products              Product[]
  subscriptions         ProductSubscription[]         
  orders                Order[]         
  createdAt             DateTime                @default(now())
}    

model ProductSubscription {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  productId             String                  @db.ObjectId
  product               Product                 @relation(fields: [productId], references: [id])        
  userId                String                  @db.ObjectId
  user                  User                    @relation(fields: [userId], references: [id])        
}

model Product {
  id                   String                   @id @default(auto()) @map("_id") @db.ObjectId
  name                 String                 
  userId               String                   @db.ObjectId
  user                 User                     @relation(fields: [userId], references: [id])
  subscriptionIds      String[]                 @db.ObjectId
  subscriptions        ProductSubscription[]    
  variants             Variant[]                
  createdAt            DateTime                 @default(now())
}

type ProductAmount {
  productId     String                   @db.ObjectId
  amount        Int
}

model Order {    
  id             String                  @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  phone          String 
  offerIds       String[]                @db.ObjectId
  offers         OfferDetails[]            
  userId         String                  @db.ObjectId
  user           User                    @relation(fields: [userId], references: [id])
  addressInfo    Address     
  observations   String?
  date           DateTime      
  shift          String
  createdAt      DateTime                @default(now())
}

model OfferDetails {
  id             String                  @id @default(auto()) @map("_id") @db.ObjectId
  offerId        String
  variantIds     VariantAmount[]
  orderId        String                    @db.ObjectId
  order          Order                     @relation(fields: [orderId], references: [id])
}

model Offer {
  id            String                   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  products      ProductAmount[]  
  discount      Discount?
}

type Discount {
  type          String
  value         Float
}

model Variant {
  id                   String            @id @default(auto()) @map("_id") @db.ObjectId
  productId            String            @db.ObjectId
  product              Product           @relation(fields: [productId], references: [id]) 
  amountAvailable      Int //transformar em um objeto com quantidade e regiao
  price                Float
  color                String?
  size                 String?
  type                 String?
}

type VariantAmount {
  variantId     String                   @db.ObjectId
  amount        Int
}






